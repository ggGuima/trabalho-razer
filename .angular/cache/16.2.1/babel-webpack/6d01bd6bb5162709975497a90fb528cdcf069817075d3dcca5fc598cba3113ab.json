{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/login.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  var _class;\n  class AuthGuard {\n    constructor(loginService, router) {\n      this.loginService = loginService;\n      this.router = router;\n    }\n    canActivate(route, state) {\n      const usuarioLogado = this.loginService.usuarioLogado;\n      const url = state.url;\n      if (usuarioLogado) {\n        if (route.data?.['role'] && route.data?.['role'].indexOf(usuarioLogado.perfil) === -1) {\n          // Se o perfil do usuário não está no perfil da rota\n          // vai para login\n          this.router.navigate(['/login'], {\n            queryParams: {\n              error: \"Proibido o acesso a \" + url\n            }\n          });\n          return false;\n        }\n        // em qualquer outro caso, permite o acesso\n        return true;\n      }\n      // Se não está logado, vai para login\n      this.router.navigate(['/login'], {\n        queryParams: {\n          error: \"Deve fazer o login antes de acessar \" + url\n        }\n      });\n      return false;\n    }\n  }\n  _class = AuthGuard;\n  _class.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.LoginService), i0.ɵɵinject(i2.Router));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}