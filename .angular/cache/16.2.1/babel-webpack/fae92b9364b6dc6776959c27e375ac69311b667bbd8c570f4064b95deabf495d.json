{"ast":null,"code":"var _class;\nimport { of } from 'rxjs';\nimport { Usuario } from 'src/app/shared';\nimport * as i0 from \"@angular/core\";\nexport class LoginService {\n  constructor() {\n    this.LS_CHAVE = \"usuarioLogado\";\n  }\n  get usuarioLogado() {\n    let usu = localStorage[this.LS_CHAVE];\n    return usu ? JSON.parse(localStorage[this.LS_CHAVE]) : null;\n  }\n  set usuarioLogado(usuario) {\n    localStorage[this.LS_CHAVE] = JSON.stringify(usuario);\n  }\n  logout() {\n    delete localStorage[this.LS_CHAVE];\n  }\n  login(login) {\n    let usu = new Usuario(1, \"Razer-Func\", login.login, login.senha, \"FUNC\");\n    if (login.login == login.senha) {\n      if (login.login == \"admin\") {\n        usu = new Usuario(1, \"Razer-Admin\", login.login, login.senha, \"ADMIN\");\n      } else if (login.login == \"gerente\") {\n        usu = new Usuario(1, \"Razer-Gerente\", login.login, login.senha, \"GERENTE\");\n      }\n      return of(usu);\n    } else {\n      return of(null);\n    }\n  }\n}\n_class = LoginService;\n_class.ɵfac = function LoginService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["of","Usuario","LoginService","constructor","LS_CHAVE","usuarioLogado","usu","localStorage","JSON","parse","usuario","stringify","logout","login","senha","factory","ɵfac","providedIn"],"sources":["/home/requisitos/Acacia/pessoais/estudos/raizer-angular/crud-trabalhoentregar/trabalho-razer/src/app/auth/services/login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Usuario, Login } from 'src/app/shared';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class LoginService {\n\n  private LS_CHAVE: string = \"usuarioLogado\";\n\n\n  public get usuarioLogado(): Usuario {\n    let usu = localStorage[this.LS_CHAVE];\n    return (usu ? JSON.parse(localStorage[this.LS_CHAVE]) : null);\n    }\n    public set usuarioLogado(usuario: Usuario) {\n    localStorage[this.LS_CHAVE] = JSON.stringify(usuario);\n    }\n    logout() {\n    delete localStorage[this.LS_CHAVE];\n    }\n\n    login(login: Login): Observable<Usuario | null> {\n      let usu = new Usuario(1, \"Razer-Func\",\n      login.login, login.senha, \"FUNC\");\n      if (login.login == login.senha) {\n      if (login.login == \"admin\") {\n      usu = new Usuario(1, \"Razer-Admin\",\n      login.login, login.senha, \"ADMIN\");\n      }\n      else if (login.login == \"gerente\") {\n      usu = new Usuario(1, \"Razer-Gerente\",\n      login.login, login.senha, \"GERENTE\");\n      }\n      return of(usu);\n      }\n      else {\n      return of(null);\n      }\n      }\n\n    }"],"mappings":";AACA,SAAqBA,EAAE,QAAQ,MAAM;AACrC,SAASC,OAAO,QAAe,gBAAgB;;AAO/C,OAAM,MAAOC,YAAY;EALzBC,YAAA;IAOU,KAAAC,QAAQ,GAAW,eAAe;;EAG1C,IAAWC,aAAaA,CAAA;IACtB,IAAIC,GAAG,GAAGC,YAAY,CAAC,IAAI,CAACH,QAAQ,CAAC;IACrC,OAAQE,GAAG,GAAGE,IAAI,CAACC,KAAK,CAACF,YAAY,CAAC,IAAI,CAACH,QAAQ,CAAC,CAAC,GAAG,IAAI;EAC5D;EACA,IAAWC,aAAaA,CAACK,OAAgB;IACzCH,YAAY,CAAC,IAAI,CAACH,QAAQ,CAAC,GAAGI,IAAI,CAACG,SAAS,CAACD,OAAO,CAAC;EACrD;EACAE,MAAMA,CAAA;IACN,OAAOL,YAAY,CAAC,IAAI,CAACH,QAAQ,CAAC;EAClC;EAEAS,KAAKA,CAACA,KAAY;IAChB,IAAIP,GAAG,GAAG,IAAIL,OAAO,CAAC,CAAC,EAAE,YAAY,EACrCY,KAAK,CAACA,KAAK,EAAEA,KAAK,CAACC,KAAK,EAAE,MAAM,CAAC;IACjC,IAAID,KAAK,CAACA,KAAK,IAAIA,KAAK,CAACC,KAAK,EAAE;MAChC,IAAID,KAAK,CAACA,KAAK,IAAI,OAAO,EAAE;QAC5BP,GAAG,GAAG,IAAIL,OAAO,CAAC,CAAC,EAAE,aAAa,EAClCY,KAAK,CAACA,KAAK,EAAEA,KAAK,CAACC,KAAK,EAAE,OAAO,CAAC;OACjC,MACI,IAAID,KAAK,CAACA,KAAK,IAAI,SAAS,EAAE;QACnCP,GAAG,GAAG,IAAIL,OAAO,CAAC,CAAC,EAAE,eAAe,EACpCY,KAAK,CAACA,KAAK,EAAEA,KAAK,CAACC,KAAK,EAAE,SAAS,CAAC;;MAEpC,OAAOd,EAAE,CAACM,GAAG,CAAC;KACb,MACI;MACL,OAAON,EAAE,CAAC,IAAI,CAAC;;EAEf;;SAjCOE,YAAY;;mBAAZA,MAAY;AAAA;;SAAZA,MAAY;EAAAa,OAAA,EAAZb,MAAY,CAAAc,IAAA;EAAAC,UAAA,EAJX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}