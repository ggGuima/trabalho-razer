{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nconst LS_CHAVE = \"produto\";\nexport class ProdutosService {\n  constructor() {}\n  listarTodos() {\n    const produtos = localStorage[LS_CHAVE];\n    return produtos ? JSON.parse(produtos) : [];\n  }\n  inserir(produto) {\n    const produtos = this.listarTodos();\n    produto.id = new Date().getTime();\n    produtos.push(produto);\n    localStorage[LS_CHAVE] = JSON.stringify(produtos);\n  }\n  buscarPorId(id) {\n    const produtos = this.listarTodos();\n    return produtos.find(produto => produto.id === id);\n  }\n  atualizar(produto) {\n    const produtos = this.listarTodos();\n    produtos.forEach((obj, index, objs) => {\n      if (produto.id === obj.id) {\n        objs[index] = produto;\n      }\n    });\n    localStorage[LS_CHAVE] = JSON.stringify(produtos);\n  }\n  remover(id) {\n    let produtos = this.listarTodos();\n    produtos = produtos.filter(produto => produto.id !== id);\n    localStorage[LS_CHAVE] = JSON.stringify(produtos);\n  }\n}\n_class = ProdutosService;\n_class.ɵfac = function ProdutosService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["LS_CHAVE","ProdutosService","constructor","listarTodos","produtos","localStorage","JSON","parse","inserir","produto","id","Date","getTime","push","stringify","buscarPorId","find","atualizar","forEach","obj","index","objs","remover","filter","factory","ɵfac","providedIn"],"sources":["/home/requisitos/Acacia/pessoais/estudos/raizer-angular/crud-trabalhoentregar/trabalho-razer/src/app/produtos/service/produtos.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Produtos } from 'src/app/shared/models/produtos.model';\n\n\nconst LS_CHAVE: string = \"produto\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProdutosService {\n\n  constructor() { }\n\n  listarTodos(): Produtos[] {\n    const produtos = localStorage[LS_CHAVE];\n    return produtos ? JSON.parse(produtos) : [];\n  }\n\n  inserir(produto: Produtos): void {\n    const produtos = this.listarTodos();\n    produto.id = new Date().getTime();\n    produtos.push(produto);\n    localStorage[LS_CHAVE] = JSON.stringify(produtos);\n  }\n\n  buscarPorId(id: number): Produtos | undefined {\n    const produtos: Produtos[] = this.listarTodos();\n    return produtos.find(produto => produto.id === id);\n  }\n\n  atualizar(produto: Produtos): void {\n    const produtos: Produtos[] = this.listarTodos();\n    produtos.forEach((obj, index, objs) => {\n      if(produto.id === obj.id) {\n        objs[index] = produto\n      }\n    });\n    localStorage[LS_CHAVE] = JSON.stringify(produtos);\n  }\n\n  remover(id: number): void {\n    let produtos: Produtos[] = this.listarTodos();\n    produtos = produtos.filter( produto => produto.id !== id);\n    localStorage[LS_CHAVE] = JSON.stringify(produtos);\n  }\n}\n"],"mappings":";;AAIA,MAAMA,QAAQ,GAAW,SAAS;AAMlC,OAAM,MAAOC,eAAe;EAE1BC,YAAA,GAAgB;EAEhBC,WAAWA,CAAA;IACT,MAAMC,QAAQ,GAAGC,YAAY,CAACL,QAAQ,CAAC;IACvC,OAAOI,QAAQ,GAAGE,IAAI,CAACC,KAAK,CAACH,QAAQ,CAAC,GAAG,EAAE;EAC7C;EAEAI,OAAOA,CAACC,OAAiB;IACvB,MAAML,QAAQ,GAAG,IAAI,CAACD,WAAW,EAAE;IACnCM,OAAO,CAACC,EAAE,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;IACjCR,QAAQ,CAACS,IAAI,CAACJ,OAAO,CAAC;IACtBJ,YAAY,CAACL,QAAQ,CAAC,GAAGM,IAAI,CAACQ,SAAS,CAACV,QAAQ,CAAC;EACnD;EAEAW,WAAWA,CAACL,EAAU;IACpB,MAAMN,QAAQ,GAAe,IAAI,CAACD,WAAW,EAAE;IAC/C,OAAOC,QAAQ,CAACY,IAAI,CAACP,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKA,EAAE,CAAC;EACpD;EAEAO,SAASA,CAACR,OAAiB;IACzB,MAAML,QAAQ,GAAe,IAAI,CAACD,WAAW,EAAE;IAC/CC,QAAQ,CAACc,OAAO,CAAC,CAACC,GAAG,EAAEC,KAAK,EAAEC,IAAI,KAAI;MACpC,IAAGZ,OAAO,CAACC,EAAE,KAAKS,GAAG,CAACT,EAAE,EAAE;QACxBW,IAAI,CAACD,KAAK,CAAC,GAAGX,OAAO;;IAEzB,CAAC,CAAC;IACFJ,YAAY,CAACL,QAAQ,CAAC,GAAGM,IAAI,CAACQ,SAAS,CAACV,QAAQ,CAAC;EACnD;EAEAkB,OAAOA,CAACZ,EAAU;IAChB,IAAIN,QAAQ,GAAe,IAAI,CAACD,WAAW,EAAE;IAC7CC,QAAQ,GAAGA,QAAQ,CAACmB,MAAM,CAAEd,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKA,EAAE,CAAC;IACzDL,YAAY,CAACL,QAAQ,CAAC,GAAGM,IAAI,CAACQ,SAAS,CAACV,QAAQ,CAAC;EACnD;;SAnCWH,eAAe;;mBAAfA,MAAe;AAAA;;SAAfA,MAAe;EAAAuB,OAAA,EAAfvB,MAAe,CAAAwB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}